@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
}

@layer base {
  html {
    @apply scroll-smooth;
  }

  :root {
    --background: 210 33% 96%; /* Light Gray - #F0F4F8 */
    --foreground: 210 25% 15%; /* Dark Blue/Gray */

    --muted: 210 30% 90%;
    --muted-foreground: 210 25% 35%;

    --popover: 210 33% 98%; /* Slightly lighter than background */
    --popover-foreground: 210 25% 15%;

    --card: 210 33% 99%; /* White/Off-white */
    --card-foreground: 210 25% 15%;

    --border: 210 20% 88%;
    --input: 210 20% 92%;

    --primary: 210 29% 24%; /* Midnight Blue - #2C3E50 */
    --primary-foreground: 210 20% 95%; /* Light Gray/White */

    --secondary: 210 28% 45%; /* A lighter shade of primary */
    --secondary-foreground: 210 20% 95%;

    --accent: 207 68% 53%; /* Teal - #3498DB */
    --accent-foreground: 0 0% 100%; /* White */

    --destructive: 0 72% 51%;
    --destructive-foreground: 0 0% 98%;

    --ring: 207 68% 53%; /* Accent color for rings */
    --radius: 0.5rem;

    /* ShadCN Chart colors - can be kept as is or updated if charts are used */
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    /* Sidebar colors (not used in this project but part of the theme structure) */
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 210 29% 14%; /* Darker version of Midnight Blue */
    --foreground: 210 20% 95%; /* Light Gray/White */

    --muted: 210 25% 25%;
    --muted-foreground: 210 20% 70%;

    --popover: 210 29% 10%; /* Very dark */
    --popover-foreground: 210 20% 95%;

    --card: 210 29% 16%; /* Slightly lighter than dark background */
    --card-foreground: 210 20% 95%;

    --border: 210 20% 30%;
    --input: 210 20% 28%;

    --primary: 207 68% 63%; /* Lighter Teal for dark mode primary */
    --primary-foreground: 210 29% 10%; /* Dark for contrast */

    --secondary: 210 25% 30%;
    --secondary-foreground: 210 20% 95%;

    --accent: 207 68% 53%; /* Teal - #3498DB (can remain same or be adjusted) */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --ring: 207 68% 63%;

    /* ShadCN Chart colors for dark mode */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    /* Dark mode prose specific variables */
    --prose-body: hsl(var(--foreground));
    --prose-headings: hsl(var(--primary));
    --prose-links: hsl(var(--accent));
    --prose-bold: hsl(var(--foreground));
    --prose-code: hsl(var(--foreground));
    --prose-pre-code: hsl(var(--foreground));
    --prose-pre-bg: hsl(var(--muted) / 0.5); /* Slightly transparent muted */
    --prose-quote-borders: hsl(var(--border));
    --prose-captions: hsl(var(--muted-foreground));
    --prose-hr: hsl(var(--border));
  }

  /* Light mode prose variables */
  :root {
    --prose-body: hsl(var(--foreground));
    --prose-headings: hsl(var(--primary));
    --prose-links: hsl(var(--accent));
    --prose-bold: hsl(var(--foreground));
    --prose-code: hsl(var(--foreground)); /* Code text color */
    --prose-pre-code: hsl(var(--foreground)); /* Text color inside pre */
    --prose-pre-bg: hsl(var(--muted) / 0.5); /* Background for pre */
    --prose-quote-borders: hsl(var(--border));
    --prose-captions: hsl(var(--muted-foreground));
    --prose-hr: hsl(var(--border));
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    @apply antialiased;
  }

  /* Tailwind CSS Typography (Prose) styles */
  .prose {
    color: var(--prose-body);
  }
  .prose :where(h1,h2,h3,h4,h5,h6):not(:where([class~="not-prose"] *)) {
    color: var(--prose-headings);
    font-weight: 700;
    margin-bottom: theme('spacing.3');
    margin-top: theme('spacing.6');
  }
  .prose :where(h1):not(:where([class~="not-prose"] *)) {
    font-size: theme('fontSize.3xl');
    line-height: theme('lineHeight.tight');
  }
  .prose :where(h2):not(:where([class~="not-prose"] *)) {
    font-size: theme('fontSize.2xl');
    line-height: theme('lineHeight.snug');
  }
  .prose :where(h3):not(:where([class~="not-prose"] *)) {
    font-size: theme('fontSize.xl');
    line-height: theme('lineHeight.normal');
  }
   .prose :where(p):not(:where([class~="not-prose"] *)) {
    margin-bottom: theme('spacing.4');
    line-height: theme('lineHeight.relaxed');
  }
  .prose :where(a):not(:where([class~="not-prose"] *)) {
    color: var(--prose-links);
    text-decoration: none;
  }
  .prose :where(a):hover:not(:where([class~="not-prose"] *)) {
    text-decoration: underline;
  }
  .prose :where(strong):not(:where([class~="not-prose"] *)) {
    color: var(--prose-bold);
    font-weight: 600;
  }
  .prose :where(ul,ol):not(:where([class~="not-prose"] *)) {
    margin-left: theme('spacing.6');
    margin-bottom: theme('spacing.4');
  }
  .prose :where(ul):not(:where([class~="not-prose"] *)) {
    list-style-type: disc;
  }
  .prose :where(ol):not(:where([class~="not-prose"] *)) {
    list-style-type: decimal;
  }
  .prose :where(li > p):not(:where([class~="not-prose"] *)) {
      margin-bottom: theme('spacing.1');
  }
  .prose :where(blockquote):not(:where([class~="not-prose"] *)) {
    border-left-width: 4px;
    border-color: var(--prose-quote-borders);
    padding-left: theme('spacing.4');
    font-style: italic;
    margin-top: theme('spacing.6');
    margin-bottom: theme('spacing.6');
    color: var(--prose-captions);
  }
  .prose :where(figure > figcaption):not(:where([class~="not-prose"] *)) {
    color: var(--prose-captions);
    font-size: theme('fontSize.sm');
    margin-top: theme('spacing.2');
  }
  .prose :where(code):not(:where([class~="not-prose"] *)) {
    background-color: hsl(var(--muted) / 0.3);
    color: var(--prose-code);
    font-family: theme('fontFamily.mono');
    font-size: theme('fontSize.sm');
    padding: theme('spacing.[0.5]') theme('spacing.1');
    border-radius: theme('borderRadius.sm');
    font-weight: 600;
  }
  .prose :where(code):not(:where([class~="not-prose"] *))::before,
  .prose :where(code):not(:where([class~="not-prose"] *))::after {
    content: ""; /* Remove backticks if Tailwind Typography plugin isn't used */
  }
  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: var(--prose-pre-bg);
    color: var(--prose-pre-code);
    font-family: theme('fontFamily.mono');
    font-size: theme('fontSize.sm');
    overflow-x: auto;
    padding: theme('spacing.4');
    border-radius: theme('borderRadius.md');
    margin-top: theme('spacing.6');
    margin-bottom: theme('spacing.6');
  }
  .prose :where(pre code):not(:where([class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .prose :where(hr):not(:where([class~="not-prose"] *)) {
    border-top-width: 1px;
    border-color: var(--prose-hr);
    margin-top: theme('spacing.8');
    margin-bottom: theme('spacing.8');
  }
  .prose :where(img):not(:where([class~="not-prose"] *)) {
    border-radius: theme('borderRadius.lg');
    box-shadow: theme('boxShadow.md');
    margin-top: theme('spacing.6');
    margin-bottom: theme('spacing.6');
  }
  .prose :where(table):not(:where([class~="not-prose"] *)) {
    width: 100%;
    margin-bottom: theme('spacing.4');
    border-collapse: collapse;
  }
  .prose :where(thead):not(:where([class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-color: var(--prose-hr);
  }
  .prose :where(th):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
    padding: theme('spacing.2') theme('spacing.3');
    text-align: left;
  }
  .prose :where(td):not(:where([class~="not-prose"] *)) {
    padding: theme('spacing.2') theme('spacing.3');
    border-top-width: 1px;
    border-color: var(--prose-hr);
  }
}

/* NProgress styles */
#nprogress {
  pointer-events: none;
}

#nprogress .bar {
  background: hsl(var(--accent)); /* Use accent color from theme */
  position: fixed;
  z-index: 1031;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px; /* Make the bar a bit thicker */
}

#nprogress .peg {
  display: block;
  position: absolute;
  right: 0px;
  width: 100px;
  height: 100%;
  box-shadow: 0 0 10px hsl(var(--accent)), 0 0 5px hsl(var(--accent));
  opacity: 1.0;
  -webkit-transform: rotate(3deg) translate(0px, -4px);
      -ms-transform: rotate(3deg) translate(0px, -4px);
          transform: rotate(3deg) translate(0px, -4px);
}
